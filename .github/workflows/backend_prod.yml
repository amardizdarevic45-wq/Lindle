name: "[PROD] Lindle API"

on:
  push:
    branches:
      - main
    paths: 
      - 'Backend/**'
      - '.github/workflows/backend_prod.yml'
  workflow_dispatch:

env:
  PROJECT_ID: cognispace
  GAR_LOCATION: europe-central2 
  SERVICE: lindle-backend 
  REGION: europe-central2 
  ENVIRONMENT: prod
  OPENAI_PROJECT: proj_8eJUMAtb5CluAQkaxcpES4op

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        
      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Compute version
        id: version
        run: |
          echo "BACKEND_VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV

      - name: Build and Push Container
        run: |-
          gcloud auth list
          cd Backend
          docker build \
            --build-arg BACKEND_VERSION=${BACKEND_VERSION} \
            --build-arg GIT_SHA=${GIT_SHA} \
            --build-arg BUILD_TIME=${BUILD_TIME} \
            --build-arg ENVIRONMENT=${ENVIRONMENT} \
            -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.ENVIRONMENT }}-${{ github.sha }} ./
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.ENVIRONMENT }}-${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.ENVIRONMENT }}-${{ github.sha }}
          traffic: "latest=100"
          env_vars: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            OPENAI_PROJECT=${{ env.OPENAI_PROJECT }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
